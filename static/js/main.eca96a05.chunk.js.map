{"version":3,"sources":["assets/peoples.svg","assets/table.svg","redux/user/user.types.js","redux/user/user.utils.js","redux/user/user.reducer.js","redux/table/table.types.js","redux/table/table.reducer.js","redux/root-reducer.js","redux/store.js","components/auth-form/auth-form.component.jsx","redux/user/user.actions.js","components/navbar/navbar.component.jsx","redux/table/table.actions.js","components/custom-sheet/custom-sheet.component.jsx","components/sheets/sheets.component.jsx","components/table-container/table-container.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserActionTypes","SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","userCheck","e","login","password","INITIAL_STATE","currentUser","error","userReducer","state","action","type","payload","tableActionTypes","DELETE_DATA","EDIT_DATA","EDIT_START","tableItems","id","degree","edit","tableReducer","filter","item","map","newValue","rootReducer","combineReducers","user","table","store","createStore","applyMiddleware","connect","dispatch","signInStart","credentials","useState","signUp","setSignUp","userCredentials","setCredentials","handleChange","event","target","value","name","className","key","onChange","onClick","preventDefault","Navbar","hide","setHide","to","src","Peoples","alt","Docs","editData","data","deleteData","editStart","inputEl","useRef","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","placeholder","ref","color","current","Sheets","exact","path","TableContainer","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.eca96a05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/peoples.d7abc70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/table.c4b2bf3c.svg\";","const UserActionTypes = {\n  SIGN_IN_START: \"SIGN_IN_START\",\n  SIGN_IN_SUCCESS: \"SIGN_IN_SUCCESS\",\n  SIGN_IN_FAILURE: \"SIGN_IN_FAILURE\",\n};\n\nexport default UserActionTypes;\n","export const userCheck = (e) => {\n  if (e.login === \"admin\" && e.password === \"admin\") {\n    return true;\n  }\n  return false;\n};\n","import UserActionTypes from \"./user.types\";\nimport { userCheck } from \"./user.utils\";\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_START:\n      return {\n        ...state,\n        currentUser: userCheck(action.payload),\n        error: null,\n      };\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: true,\n        error: null,\n      };\n    case UserActionTypes.SIGN_IN_FAILURE:\n      return {\n        ...state,\n        currentUser: null,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","const tableActionTypes = {\n  DELETE_DATA: \"DELETE_DATA\",\n  EDIT_DATA: \"EDIT_DATA\",\n  EDIT_START: \"EDIT_START\",\n};\nexport default tableActionTypes;\n","import tableActionTypes from \"./table.types\";\n\nconst INITIAL_STATE = {\n  tableItems: [\n    { id: 1, degree: 6, login: \"John\", edit: false },\n    { id: 2, degree: 14, login: \"Steven\", edit: false },\n    { id: 5, degree: 675, login: \"Habib\", edit: false },\n    { id: 9, degree: 5, login: \"Jasica\", edit: false },\n    { id: 14, degree: 102, login: \"TruePro\", edit: false },\n  ],\n};\n\nconst tableReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case tableActionTypes.DELETE_DATA:\n      return {\n        ...state,\n        tableItems: state.tableItems.filter(\n          (item) => item.id !== action.payload\n        ),\n      };\n    case tableActionTypes.EDIT_START:\n      return {\n        ...state,\n        tableItems: state.tableItems.map((item) => {\n          if (item.id === action.payload) {\n            item.edit = !item.edit;\n          }\n          return item;\n        }),\n      };\n    case tableActionTypes.EDIT_DATA:\n      return {\n        ...state,\n        tableItems: state.tableItems.map((item) => {\n          const [id, newValue, type] = action.payload;\n          if (item.id === id) {\n            item[type] = newValue;\n          }\n          return item;\n        }),\n      };\n\n    default:\n      return state;\n  }\n};\nexport default tableReducer;\n","import { combineReducers } from \"redux\";\n\nimport userReducer from \"./user/user.reducer\";\nimport tableReducer from \"./table/table.reducer\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  table: tableReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { signInStart } from \"../../redux/user/user.actions\";\n\nimport \"./auth-form.styles.scss\";\n\nconst AuthForm = ({ signInStart }) => {\n  const [signUp, setSignUp] = useState(false);\n\n  const [userCredentials, setCredentials] = useState({\n    login: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <form className=\"form__wrapper\">\n      {signUp ? (\n        <div className=\"sign-up\">\n          <label key=\"1\" className=\"form__label\">\n            <span>Login</span>\n            <input type=\"name\" />\n          </label>\n          <label key=\"2\" className=\"form__label\">\n            <span>Email</span>\n            <input type=\"email\" />\n          </label>\n          <label key=\"3\" className=\"form__label\">\n            <span>Password</span>\n            <input type=\"name\" />\n          </label>\n          <label key=\"4\" className=\"form__label\">\n            <span>Confirm Password</span>\n            <input type=\"password\" />\n          </label>\n        </div>\n      ) : (\n        <div className=\"sign-in\">\n          <label key=\"5\" className=\"form__label\">\n            <span>Login</span>\n            <input type=\"name\" name=\"login\" onChange={handleChange} />\n          </label>\n          <label key=\"6\" className=\"form__label\">\n            <span>Password</span>\n            <input type=\"password\" name=\"password\" onChange={handleChange} />\n          </label>\n        </div>\n      )}\n\n      <div className=\"form__buttons\">\n        <button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            if (signUp) {\n              setSignUp(!signUp);\n            }\n            signInStart(userCredentials);\n          }}\n        >\n          LOGIN\n        </button>\n        <button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            if (!signUp) {\n              setSignUp(!signUp);\n            }\n          }}\n        >\n          REGISTRATION\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signInStart: (credentials) => dispatch(signInStart(credentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(AuthForm);\n","import UserActionTypes from \"./user.types\";\n\nexport const signInStart = (userCredentials) => ({\n  type: UserActionTypes.SIGN_IN_START,\n  payload: userCredentials,\n});\n\nexport const signInSuccess = () => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n});\n\nexport const signInFailure = (error) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error,\n});\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport Peoples from \"../../assets/peoples.svg\";\nimport Docs from \"../../assets/table.svg\";\n\nimport \"./navbar.styles.scss\";\n\nconst Navbar = () => {\n  const [hide, setHide] = useState(false);\n\n  const hideNavbar = () => {\n    setHide(!hide);\n  };\n\n  return (\n    <div className={\"navbar__wrapper\" + (hide ? \" navbar__hidden\" : \"\")}>\n      <ul className=\"menu__list\">\n        <li>\n          <Link to=\"/\" className=\"menu__item\">\n            <img className=\"menu__item-image\" src={Peoples} alt=\"\" />\n            <span className=\"menu__item-text\">Users</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"temperature\" className=\"menu__item\">\n            <img className=\"menu__item-image\" src={Docs} alt=\"\" />\n            <span className=\"menu__item-text\">Temperature</span>\n          </Link>\n        </li>\n      </ul>\n      <div className=\"menu__hide-button\" onClick={() => hideNavbar()}>\n        ←\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import tableActionTypes from \"./table.types\";\n\nexport const deleteData = (id) => ({\n  type: tableActionTypes.DELETE_DATA,\n  payload: id,\n});\n\nexport const editStart = (id) => ({\n  type: tableActionTypes.EDIT_START,\n  payload: id,\n});\n\nexport const editData = (...data) => ({\n  type: tableActionTypes.EDIT_DATA,\n  payload: data,\n});\n","import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  deleteData,\n  editStart,\n  editData,\n} from \"../../redux/table/table.actions\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nimport \"./custom-sheet.styles.scss\";\n\nconst CustomSheet = ({\n  name,\n  type,\n  tableItems,\n  deleteData,\n  editStart,\n  editData,\n}) => {\n  const inputEl = useRef(null);\n  return (\n    <TableContainer className=\"sheet\" component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">id</TableCell>\n            <TableCell align=\"center\">{name}</TableCell>\n            <TableCell align=\"right\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tableItems.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell align=\"left\">{row.id}</TableCell>\n              <TableCell align=\"center\">\n                {row.edit ? (\n                  <input\n                    type=\"text\"\n                    className=\"edit-input\"\n                    placeholder={row[type]}\n                    ref={inputEl}\n                  />\n                ) : (\n                  row[type]\n                )}\n              </TableCell>\n              <TableCell align=\"right\">\n                {row.edit ? (\n                  <>\n                    <CheckIcon\n                      className=\"first-icon\"\n                      color=\"action\"\n                      onClick={() => {\n                        if (inputEl.current.value) {\n                          editData(row.id, inputEl.current.value, type);\n                        }\n                        editStart(row.id);\n                      }}\n                    />\n                    <ClearIcon\n                      className=\"second-icon\"\n                      color=\"action\"\n                      onClick={() => editStart(row.id)}\n                    />\n                  </>\n                ) : (\n                  <>\n                    <CreateIcon\n                      className=\"first-icon\"\n                      color=\"action\"\n                      onClick={() => {\n                        if (!inputEl.current) {\n                          editStart(row.id);\n                        }\n                      }}\n                    />\n                    <DeleteIcon\n                      className=\"second-icon\"\n                      color=\"action\"\n                      onClick={() => deleteData(row.id)}\n                    />\n                  </>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst mapStateToProps = ({ table: { tableItems } }) => ({\n  tableItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteData: (id) => dispatch(deleteData(id)),\n  editStart: (id) => dispatch(editStart(id)),\n  editData: (...data) => dispatch(editData(...data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomSheet);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport CustomSheet from \"../custom-sheet/custom-sheet.component\";\n\nimport \"./sheets.styles.scss\";\n\nconst Sheets = () => {\n  return (\n    <div className=\"sheets__wrapper\">\n      <Switch>\n        <Route exact path=\"/\">\n          <CustomSheet name={\"Login\"} type={\"login\"} />\n        </Route>\n        <Route path=\"/temperature\">\n          <CustomSheet name={\"Degree\"} type={\"degree\"} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Sheets;\n","import React from \"react\";\n\nimport Navbar from \"../navbar/navbar.component\";\nimport Sheets from \"../sheets/sheets.component\";\n\nimport \"./table-container.styles.scss\";\n\nconst TableContainer = () => {\n  return (\n    <div className=\"table__wrapper\">\n      <Navbar />\n      <Sheets />\n    </div>\n  );\n};\n\nexport default TableContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport AuthForm from \"./components/auth-form/auth-form.component\";\nimport TableContainer from \"./components/table-container/table-container.component\";\n\nimport \"./App.scss\";\n\nfunction App({ currentUser }) {\n  return (\n    <div className=\"App\">{currentUser ? <TableContainer /> : <AuthForm />}</div>\n  );\n}\n\nconst mapStateToProps = ({ user: { currentUser } }) => ({\n  currentUser,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}